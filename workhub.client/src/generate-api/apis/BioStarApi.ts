/* tslint:disable */
/* eslint-disable */
/**
 * WorkHub.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  BioStarSyncAllUsersResponse,
  BioStarSyncHistoricalEventsResponse,
  ErrorResponse,
  ErrorValidateResponse,
  GetHistoricalEventsRequest,
  WebSocketState,
} from '../models/index';
import {
    BioStarSyncAllUsersResponseFromJSON,
    BioStarSyncAllUsersResponseToJSON,
    BioStarSyncHistoricalEventsResponseFromJSON,
    BioStarSyncHistoricalEventsResponseToJSON,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    ErrorValidateResponseFromJSON,
    ErrorValidateResponseToJSON,
    GetHistoricalEventsRequestFromJSON,
    GetHistoricalEventsRequestToJSON,
    WebSocketStateFromJSON,
    WebSocketStateToJSON,
} from '../models/index';

export interface BioStarSyncTimesheetsRequest {
    getHistoricalEventsRequest?: GetHistoricalEventsRequest;
}

/**
 * 
 */
export class BioStarApi extends runtime.BaseAPI {

    /**
     */
    async bioStarGetWebSocketStateRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebSocketState>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/biostar/websocket-state`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WebSocketStateFromJSON(jsonValue));
    }

    /**
     */
    async bioStarGetWebSocketState(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebSocketState> {
        const response = await this.bioStarGetWebSocketStateRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async bioStarReConnectWebsocketRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WebSocketState>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/biostar/reconnect-websocket`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WebSocketStateFromJSON(jsonValue));
    }

    /**
     */
    async bioStarReConnectWebsocket(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WebSocketState> {
        const response = await this.bioStarReConnectWebsocketRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async bioStarSyncTimesheetsRaw(requestParameters: BioStarSyncTimesheetsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BioStarSyncHistoricalEventsResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/biostar/sync-timesheets`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: GetHistoricalEventsRequestToJSON(requestParameters['getHistoricalEventsRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => BioStarSyncHistoricalEventsResponseFromJSON(jsonValue));
    }

    /**
     */
    async bioStarSyncTimesheets(requestParameters: BioStarSyncTimesheetsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BioStarSyncHistoricalEventsResponse> {
        const response = await this.bioStarSyncTimesheetsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async bioStarSyncUsersRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BioStarSyncAllUsersResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/api/biostar/sync-users`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => BioStarSyncAllUsersResponseFromJSON(jsonValue));
    }

    /**
     */
    async bioStarSyncUsers(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BioStarSyncAllUsersResponse> {
        const response = await this.bioStarSyncUsersRaw(initOverrides);
        return await response.value();
    }

}
