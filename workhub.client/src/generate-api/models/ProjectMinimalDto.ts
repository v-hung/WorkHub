/* tslint:disable */
/* eslint-disable */
/**
 * WorkHub.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProjectStatus } from './ProjectStatus';
import {
    ProjectStatusFromJSON,
    ProjectStatusFromJSONTyped,
    ProjectStatusToJSON,
    ProjectStatusToJSONTyped,
} from './ProjectStatus';

/**
 * 
 * @export
 * @interface ProjectMinimalDto
 */
export interface ProjectMinimalDto {
    /**
     * 
     * @type {number}
     * @memberof ProjectMinimalDto
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof ProjectMinimalDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectMinimalDto
     */
    description?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof ProjectMinimalDto
     */
    startDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof ProjectMinimalDto
     */
    endDate?: Date | null;
    /**
     * 
     * @type {ProjectStatus}
     * @memberof ProjectMinimalDto
     */
    status: ProjectStatus;
}



/**
 * Check if a given object implements the ProjectMinimalDto interface.
 */
export function instanceOfProjectMinimalDto(value: object): value is ProjectMinimalDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function ProjectMinimalDtoFromJSON(json: any): ProjectMinimalDto {
    return ProjectMinimalDtoFromJSONTyped(json, false);
}

export function ProjectMinimalDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectMinimalDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'startDate': json['startDate'] == null ? undefined : (new Date(json['startDate'])),
        'endDate': json['endDate'] == null ? undefined : (new Date(json['endDate'])),
        'status': ProjectStatusFromJSON(json['status']),
    };
}

export function ProjectMinimalDtoToJSON(json: any): ProjectMinimalDto {
    return ProjectMinimalDtoToJSONTyped(json, false);
}

export function ProjectMinimalDtoToJSONTyped(value?: ProjectMinimalDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'startDate': value['startDate'] == null ? undefined : ((value['startDate'] as any).toISOString()),
        'endDate': value['endDate'] == null ? undefined : ((value['endDate'] as any).toISOString()),
        'status': ProjectStatusToJSON(value['status']),
    };
}

