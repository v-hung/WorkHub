/* tslint:disable */
/* eslint-disable */
/**
 * WorkHub.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DeviceCategoryDto } from './DeviceCategoryDto';
import {
    DeviceCategoryDtoFromJSON,
    DeviceCategoryDtoFromJSONTyped,
    DeviceCategoryDtoToJSON,
    DeviceCategoryDtoToJSONTyped,
} from './DeviceCategoryDto';

/**
 * 
 * @export
 * @interface DeviceCategoryDtoPaginated
 */
export interface DeviceCategoryDtoPaginated {
    /**
     * 
     * @type {Array<DeviceCategoryDto>}
     * @memberof DeviceCategoryDtoPaginated
     */
    data: Array<DeviceCategoryDto>;
    /**
     * 
     * @type {number}
     * @memberof DeviceCategoryDtoPaginated
     */
    currentPage: number;
    /**
     * 
     * @type {number}
     * @memberof DeviceCategoryDtoPaginated
     */
    totalPages: number;
    /**
     * 
     * @type {number}
     * @memberof DeviceCategoryDtoPaginated
     */
    totalCount: number;
    /**
     * 
     * @type {number}
     * @memberof DeviceCategoryDtoPaginated
     */
    pageSize: number;
    /**
     * 
     * @type {boolean}
     * @memberof DeviceCategoryDtoPaginated
     */
    readonly hasPreviousPage: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof DeviceCategoryDtoPaginated
     */
    readonly hasNextPage: boolean;
}

/**
 * Check if a given object implements the DeviceCategoryDtoPaginated interface.
 */
export function instanceOfDeviceCategoryDtoPaginated(value: object): value is DeviceCategoryDtoPaginated {
    if (!('data' in value) || value['data'] === undefined) return false;
    if (!('currentPage' in value) || value['currentPage'] === undefined) return false;
    if (!('totalPages' in value) || value['totalPages'] === undefined) return false;
    if (!('totalCount' in value) || value['totalCount'] === undefined) return false;
    if (!('pageSize' in value) || value['pageSize'] === undefined) return false;
    if (!('hasPreviousPage' in value) || value['hasPreviousPage'] === undefined) return false;
    if (!('hasNextPage' in value) || value['hasNextPage'] === undefined) return false;
    return true;
}

export function DeviceCategoryDtoPaginatedFromJSON(json: any): DeviceCategoryDtoPaginated {
    return DeviceCategoryDtoPaginatedFromJSONTyped(json, false);
}

export function DeviceCategoryDtoPaginatedFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeviceCategoryDtoPaginated {
    if (json == null) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(DeviceCategoryDtoFromJSON)),
        'currentPage': json['currentPage'],
        'totalPages': json['totalPages'],
        'totalCount': json['totalCount'],
        'pageSize': json['pageSize'],
        'hasPreviousPage': json['hasPreviousPage'],
        'hasNextPage': json['hasNextPage'],
    };
}

export function DeviceCategoryDtoPaginatedToJSON(json: any): DeviceCategoryDtoPaginated {
    return DeviceCategoryDtoPaginatedToJSONTyped(json, false);
}

export function DeviceCategoryDtoPaginatedToJSONTyped(value?: Omit<DeviceCategoryDtoPaginated, 'hasPreviousPage'|'hasNextPage'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': ((value['data'] as Array<any>).map(DeviceCategoryDtoToJSON)),
        'currentPage': value['currentPage'],
        'totalPages': value['totalPages'],
        'totalCount': value['totalCount'],
        'pageSize': value['pageSize'],
    };
}

