/* tslint:disable */
/* eslint-disable */
/**
 * WorkHub.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TeamMinimalDto } from './TeamMinimalDto';
import {
    TeamMinimalDtoFromJSON,
    TeamMinimalDtoFromJSONTyped,
    TeamMinimalDtoToJSON,
    TeamMinimalDtoToJSONTyped,
} from './TeamMinimalDto';
import type { UserMinimalDto } from './UserMinimalDto';
import {
    UserMinimalDtoFromJSON,
    UserMinimalDtoFromJSONTyped,
    UserMinimalDtoToJSON,
    UserMinimalDtoToJSONTyped,
} from './UserMinimalDto';
import type { UserPosition } from './UserPosition';
import {
    UserPositionFromJSON,
    UserPositionFromJSONTyped,
    UserPositionToJSON,
    UserPositionToJSONTyped,
} from './UserPosition';
import type { UserStatus } from './UserStatus';
import {
    UserStatusFromJSON,
    UserStatusFromJSONTyped,
    UserStatusToJSON,
    UserStatusToJSONTyped,
} from './UserStatus';
import type { WorkTimeDto } from './WorkTimeDto';
import {
    WorkTimeDtoFromJSON,
    WorkTimeDtoFromJSONTyped,
    WorkTimeDtoToJSON,
    WorkTimeDtoToJSONTyped,
} from './WorkTimeDto';

/**
 * 
 * @export
 * @interface UserDto
 */
export interface UserDto {
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    userName: string;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    email?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    fullName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    phoneNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    image?: string | null;
    /**
     * 
     * @type {UserPosition}
     * @memberof UserDto
     */
    userPosition?: UserPosition;
    /**
     * 
     * @type {UserStatus}
     * @memberof UserDto
     */
    userStatus: UserStatus;
    /**
     * 
     * @type {boolean}
     * @memberof UserDto
     */
    isFirstLogin: boolean;
    /**
     * 
     * @type {number}
     * @memberof UserDto
     */
    remainingLeaveMinutes: number;
    /**
     * 
     * @type {Date}
     * @memberof UserDto
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof UserDto
     */
    updatedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    createdBy?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserDto
     */
    lastModifiedBy?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserDto
     */
    roles?: Array<string> | null;
    /**
     * 
     * @type {WorkTimeDto}
     * @memberof UserDto
     */
    workTime: WorkTimeDto;
    /**
     * 
     * @type {UserMinimalDto}
     * @memberof UserDto
     */
    supervisor?: UserMinimalDto;
    /**
     * 
     * @type {TeamMinimalDto}
     * @memberof UserDto
     */
    team?: TeamMinimalDto;
}



/**
 * Check if a given object implements the UserDto interface.
 */
export function instanceOfUserDto(value: object): value is UserDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('userName' in value) || value['userName'] === undefined) return false;
    if (!('userStatus' in value) || value['userStatus'] === undefined) return false;
    if (!('isFirstLogin' in value) || value['isFirstLogin'] === undefined) return false;
    if (!('remainingLeaveMinutes' in value) || value['remainingLeaveMinutes'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('workTime' in value) || value['workTime'] === undefined) return false;
    return true;
}

export function UserDtoFromJSON(json: any): UserDto {
    return UserDtoFromJSONTyped(json, false);
}

export function UserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'userName': json['userName'],
        'email': json['email'] == null ? undefined : json['email'],
        'fullName': json['fullName'] == null ? undefined : json['fullName'],
        'phoneNumber': json['phoneNumber'] == null ? undefined : json['phoneNumber'],
        'image': json['image'] == null ? undefined : json['image'],
        'userPosition': json['userPosition'] == null ? undefined : UserPositionFromJSON(json['userPosition']),
        'userStatus': UserStatusFromJSON(json['userStatus']),
        'isFirstLogin': json['isFirstLogin'],
        'remainingLeaveMinutes': json['remainingLeaveMinutes'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
        'createdBy': json['createdBy'] == null ? undefined : json['createdBy'],
        'lastModifiedBy': json['lastModifiedBy'] == null ? undefined : json['lastModifiedBy'],
        'roles': json['roles'] == null ? undefined : json['roles'],
        'workTime': WorkTimeDtoFromJSON(json['workTime']),
        'supervisor': json['supervisor'] == null ? undefined : UserMinimalDtoFromJSON(json['supervisor']),
        'team': json['team'] == null ? undefined : TeamMinimalDtoFromJSON(json['team']),
    };
}

export function UserDtoToJSON(json: any): UserDto {
    return UserDtoToJSONTyped(json, false);
}

export function UserDtoToJSONTyped(value?: UserDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'userName': value['userName'],
        'email': value['email'],
        'fullName': value['fullName'],
        'phoneNumber': value['phoneNumber'],
        'image': value['image'],
        'userPosition': UserPositionToJSON(value['userPosition']),
        'userStatus': UserStatusToJSON(value['userStatus']),
        'isFirstLogin': value['isFirstLogin'],
        'remainingLeaveMinutes': value['remainingLeaveMinutes'],
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt'] as any).toISOString()),
        'createdBy': value['createdBy'],
        'lastModifiedBy': value['lastModifiedBy'],
        'roles': value['roles'],
        'workTime': WorkTimeDtoToJSON(value['workTime']),
        'supervisor': UserMinimalDtoToJSON(value['supervisor']),
        'team': TeamMinimalDtoToJSON(value['team']),
    };
}

