/* tslint:disable */
/* eslint-disable */
/**
 * WorkHub.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserPosition } from './UserPosition';
import {
    UserPositionFromJSON,
    UserPositionFromJSONTyped,
    UserPositionToJSON,
    UserPositionToJSONTyped,
} from './UserPosition';
import type { UserStatus } from './UserStatus';
import {
    UserStatusFromJSON,
    UserStatusFromJSONTyped,
    UserStatusToJSON,
    UserStatusToJSONTyped,
} from './UserStatus';

/**
 * 
 * @export
 * @interface UserMinimalDto
 */
export interface UserMinimalDto {
    /**
     * 
     * @type {string}
     * @memberof UserMinimalDto
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof UserMinimalDto
     */
    userName: string;
    /**
     * 
     * @type {string}
     * @memberof UserMinimalDto
     */
    email?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserMinimalDto
     */
    fullName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserMinimalDto
     */
    phoneNumber?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserMinimalDto
     */
    image?: string | null;
    /**
     * 
     * @type {UserPosition}
     * @memberof UserMinimalDto
     */
    userPosition?: UserPosition;
    /**
     * 
     * @type {UserStatus}
     * @memberof UserMinimalDto
     */
    userStatus: UserStatus;
}



/**
 * Check if a given object implements the UserMinimalDto interface.
 */
export function instanceOfUserMinimalDto(value: object): value is UserMinimalDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('userName' in value) || value['userName'] === undefined) return false;
    if (!('userStatus' in value) || value['userStatus'] === undefined) return false;
    return true;
}

export function UserMinimalDtoFromJSON(json: any): UserMinimalDto {
    return UserMinimalDtoFromJSONTyped(json, false);
}

export function UserMinimalDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserMinimalDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'userName': json['userName'],
        'email': json['email'] == null ? undefined : json['email'],
        'fullName': json['fullName'] == null ? undefined : json['fullName'],
        'phoneNumber': json['phoneNumber'] == null ? undefined : json['phoneNumber'],
        'image': json['image'] == null ? undefined : json['image'],
        'userPosition': json['userPosition'] == null ? undefined : UserPositionFromJSON(json['userPosition']),
        'userStatus': UserStatusFromJSON(json['userStatus']),
    };
}

export function UserMinimalDtoToJSON(json: any): UserMinimalDto {
    return UserMinimalDtoToJSONTyped(json, false);
}

export function UserMinimalDtoToJSONTyped(value?: UserMinimalDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'userName': value['userName'],
        'email': value['email'],
        'fullName': value['fullName'],
        'phoneNumber': value['phoneNumber'],
        'image': value['image'],
        'userPosition': UserPositionToJSON(value['userPosition']),
        'userStatus': UserStatusToJSON(value['userStatus']),
    };
}

