/* tslint:disable */
/* eslint-disable */
/**
 * WorkHub.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ErrorValidateResponse
 */
export interface ErrorValidateResponse {
    /**
     * https://tools.ietf.org/html/rfc9110#section-15.5.1
     * @type {string}
     * @memberof ErrorValidateResponse
     */
    type: string;
    /**
     * One or more validation errors occurred.
     * @type {string}
     * @memberof ErrorValidateResponse
     */
    title: string;
    /**
     * 
     * @type {number}
     * @memberof ErrorValidateResponse
     */
    status: number;
    /**
     * 
     * @type {{ [key: string]: Array<string>; }}
     * @memberof ErrorValidateResponse
     */
    errors?: { [key: string]: Array<string>; } | null;
}

/**
 * Check if a given object implements the ErrorValidateResponse interface.
 */
export function instanceOfErrorValidateResponse(value: object): value is ErrorValidateResponse {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function ErrorValidateResponseFromJSON(json: any): ErrorValidateResponse {
    return ErrorValidateResponseFromJSONTyped(json, false);
}

export function ErrorValidateResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorValidateResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'title': json['title'],
        'status': json['status'],
        'errors': json['errors'] == null ? undefined : json['errors'],
    };
}

export function ErrorValidateResponseToJSON(json: any): ErrorValidateResponse {
    return ErrorValidateResponseToJSONTyped(json, false);
}

export function ErrorValidateResponseToJSONTyped(value?: ErrorValidateResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'title': value['title'],
        'status': value['status'],
        'errors': value['errors'],
    };
}

