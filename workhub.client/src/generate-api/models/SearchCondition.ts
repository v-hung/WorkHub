/* tslint:disable */
/* eslint-disable */
/**
 * WorkHub.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SearchOperator } from './SearchOperator';
import {
    SearchOperatorFromJSON,
    SearchOperatorFromJSONTyped,
    SearchOperatorToJSON,
    SearchOperatorToJSONTyped,
} from './SearchOperator';

/**
 * 
 * @export
 * @interface SearchCondition
 */
export interface SearchCondition {
    /**
     * 
     * @type {string}
     * @memberof SearchCondition
     */
    column: string;
    /**
     * 
     * @type {SearchOperator}
     * @memberof SearchCondition
     */
    operator: SearchOperator;
    /**
     * 
     * @type {Array<string>}
     * @memberof SearchCondition
     */
    values?: Array<string> | null;
}



/**
 * Check if a given object implements the SearchCondition interface.
 */
export function instanceOfSearchCondition(value: object): value is SearchCondition {
    if (!('column' in value) || value['column'] === undefined) return false;
    if (!('operator' in value) || value['operator'] === undefined) return false;
    return true;
}

export function SearchConditionFromJSON(json: any): SearchCondition {
    return SearchConditionFromJSONTyped(json, false);
}

export function SearchConditionFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchCondition {
    if (json == null) {
        return json;
    }
    return {
        
        'column': json['column'],
        'operator': SearchOperatorFromJSON(json['operator']),
        'values': json['values'] == null ? undefined : json['values'],
    };
}

export function SearchConditionToJSON(json: any): SearchCondition {
    return SearchConditionToJSONTyped(json, false);
}

export function SearchConditionToJSONTyped(value?: SearchCondition | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'column': value['column'],
        'operator': SearchOperatorToJSON(value['operator']),
        'values': value['values'],
    };
}

