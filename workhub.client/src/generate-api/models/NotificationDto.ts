/* tslint:disable */
/* eslint-disable */
/**
 * WorkHub.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NotificationCategory } from './NotificationCategory';
import {
    NotificationCategoryFromJSON,
    NotificationCategoryFromJSONTyped,
    NotificationCategoryToJSON,
    NotificationCategoryToJSONTyped,
} from './NotificationCategory';

/**
 * 
 * @export
 * @interface NotificationDto
 */
export interface NotificationDto {
    /**
     * 
     * @type {number}
     * @memberof NotificationDto
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof NotificationDto
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof NotificationDto
     */
    message: string;
    /**
     * 
     * @type {NotificationCategory}
     * @memberof NotificationDto
     */
    category: NotificationCategory;
    /**
     * 
     * @type {string}
     * @memberof NotificationDto
     */
    relatedEntityId?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof NotificationDto
     */
    date: Date;
    /**
     * 
     * @type {boolean}
     * @memberof NotificationDto
     */
    isRead: boolean;
}



/**
 * Check if a given object implements the NotificationDto interface.
 */
export function instanceOfNotificationDto(value: object): value is NotificationDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('category' in value) || value['category'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('isRead' in value) || value['isRead'] === undefined) return false;
    return true;
}

export function NotificationDtoFromJSON(json: any): NotificationDto {
    return NotificationDtoFromJSONTyped(json, false);
}

export function NotificationDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'message': json['message'],
        'category': NotificationCategoryFromJSON(json['category']),
        'relatedEntityId': json['relatedEntityId'] == null ? undefined : json['relatedEntityId'],
        'date': (new Date(json['date'])),
        'isRead': json['isRead'],
    };
}

export function NotificationDtoToJSON(json: any): NotificationDto {
    return NotificationDtoToJSONTyped(json, false);
}

export function NotificationDtoToJSONTyped(value?: NotificationDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'message': value['message'],
        'category': NotificationCategoryToJSON(value['category']),
        'relatedEntityId': value['relatedEntityId'],
        'date': ((value['date']).toISOString()),
        'isRead': value['isRead'],
    };
}

