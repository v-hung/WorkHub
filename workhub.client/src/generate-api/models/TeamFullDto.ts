/* tslint:disable */
/* eslint-disable */
/**
 * WorkHub.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserMinimalDto } from './UserMinimalDto';
import {
    UserMinimalDtoFromJSON,
    UserMinimalDtoFromJSONTyped,
    UserMinimalDtoToJSON,
    UserMinimalDtoToJSONTyped,
} from './UserMinimalDto';
import type { ProjectMinimalDto } from './ProjectMinimalDto';
import {
    ProjectMinimalDtoFromJSON,
    ProjectMinimalDtoFromJSONTyped,
    ProjectMinimalDtoToJSON,
    ProjectMinimalDtoToJSONTyped,
} from './ProjectMinimalDto';

/**
 * 
 * @export
 * @interface TeamFullDto
 */
export interface TeamFullDto {
    /**
     * 
     * @type {number}
     * @memberof TeamFullDto
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof TeamFullDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof TeamFullDto
     */
    description?: string | null;
    /**
     * 
     * @type {number}
     * @memberof TeamFullDto
     */
    completedProjects: number;
    /**
     * 
     * @type {number}
     * @memberof TeamFullDto
     */
    activeProjects: number;
    /**
     * 
     * @type {UserMinimalDto}
     * @memberof TeamFullDto
     */
    manager?: UserMinimalDto;
    /**
     * 
     * @type {Array<UserMinimalDto>}
     * @memberof TeamFullDto
     */
    members?: Array<UserMinimalDto> | null;
    /**
     * 
     * @type {Array<ProjectMinimalDto>}
     * @memberof TeamFullDto
     */
    projects?: Array<ProjectMinimalDto> | null;
}

/**
 * Check if a given object implements the TeamFullDto interface.
 */
export function instanceOfTeamFullDto(value: object): value is TeamFullDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('completedProjects' in value) || value['completedProjects'] === undefined) return false;
    if (!('activeProjects' in value) || value['activeProjects'] === undefined) return false;
    return true;
}

export function TeamFullDtoFromJSON(json: any): TeamFullDto {
    return TeamFullDtoFromJSONTyped(json, false);
}

export function TeamFullDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamFullDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'completedProjects': json['completedProjects'],
        'activeProjects': json['activeProjects'],
        'manager': json['manager'] == null ? undefined : UserMinimalDtoFromJSON(json['manager']),
        'members': json['members'] == null ? undefined : ((json['members'] as Array<any>).map(UserMinimalDtoFromJSON)),
        'projects': json['projects'] == null ? undefined : ((json['projects'] as Array<any>).map(ProjectMinimalDtoFromJSON)),
    };
}

export function TeamFullDtoToJSON(json: any): TeamFullDto {
    return TeamFullDtoToJSONTyped(json, false);
}

export function TeamFullDtoToJSONTyped(value?: TeamFullDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'completedProjects': value['completedProjects'],
        'activeProjects': value['activeProjects'],
        'manager': UserMinimalDtoToJSON(value['manager']),
        'members': value['members'] == null ? undefined : ((value['members'] as Array<any>).map(UserMinimalDtoToJSON)),
        'projects': value['projects'] == null ? undefined : ((value['projects'] as Array<any>).map(ProjectMinimalDtoToJSON)),
    };
}

