/* tslint:disable */
/* eslint-disable */
/**
 * WorkHub.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateDeviceCategoryCommand
 */
export interface CreateDeviceCategoryCommand {
    /**
     * 
     * @type {string}
     * @memberof CreateDeviceCategoryCommand
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CreateDeviceCategoryCommand
     */
    description?: string | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof CreateDeviceCategoryCommand
     */
    deviceIds?: Array<number> | null;
}

/**
 * Check if a given object implements the CreateDeviceCategoryCommand interface.
 */
export function instanceOfCreateDeviceCategoryCommand(value: object): value is CreateDeviceCategoryCommand {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function CreateDeviceCategoryCommandFromJSON(json: any): CreateDeviceCategoryCommand {
    return CreateDeviceCategoryCommandFromJSONTyped(json, false);
}

export function CreateDeviceCategoryCommandFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDeviceCategoryCommand {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'deviceIds': json['deviceIds'] == null ? undefined : json['deviceIds'],
    };
}

export function CreateDeviceCategoryCommandToJSON(json: any): CreateDeviceCategoryCommand {
    return CreateDeviceCategoryCommandToJSONTyped(json, false);
}

export function CreateDeviceCategoryCommandToJSONTyped(value?: CreateDeviceCategoryCommand | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'deviceIds': value['deviceIds'],
    };
}

