/* tslint:disable */
/* eslint-disable */
/**
 * WorkHub.Server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RequestCombinedMinimalDto } from './RequestCombinedMinimalDto';
import {
    RequestCombinedMinimalDtoFromJSON,
    RequestCombinedMinimalDtoFromJSONTyped,
    RequestCombinedMinimalDtoToJSON,
    RequestCombinedMinimalDtoToJSONTyped,
} from './RequestCombinedMinimalDto';

/**
 * 
 * @export
 * @interface TimesheetDto
 */
export interface TimesheetDto {
    /**
     * 
     * @type {string}
     * @memberof TimesheetDto
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof TimesheetDto
     */
    date: Date;
    /**
     * 
     * @type {Date}
     * @memberof TimesheetDto
     */
    startTime?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof TimesheetDto
     */
    endTime?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof TimesheetDto
     */
    workMinutes?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof TimesheetDto
     */
    isActive: boolean;
    /**
     * 
     * @type {Array<RequestCombinedMinimalDto>}
     * @memberof TimesheetDto
     */
    requests?: Array<RequestCombinedMinimalDto> | null;
}

/**
 * Check if a given object implements the TimesheetDto interface.
 */
export function instanceOfTimesheetDto(value: object): value is TimesheetDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('isActive' in value) || value['isActive'] === undefined) return false;
    return true;
}

export function TimesheetDtoFromJSON(json: any): TimesheetDto {
    return TimesheetDtoFromJSONTyped(json, false);
}

export function TimesheetDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimesheetDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'date': (new Date(json['date'])),
        'startTime': json['startTime'] == null ? undefined : (new Date(json['startTime'])),
        'endTime': json['endTime'] == null ? undefined : (new Date(json['endTime'])),
        'workMinutes': json['workMinutes'] == null ? undefined : json['workMinutes'],
        'isActive': json['isActive'],
        'requests': json['requests'] == null ? undefined : ((json['requests'] as Array<any>).map(RequestCombinedMinimalDtoFromJSON)),
    };
}

export function TimesheetDtoToJSON(json: any): TimesheetDto {
    return TimesheetDtoToJSONTyped(json, false);
}

export function TimesheetDtoToJSONTyped(value?: TimesheetDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'date': ((value['date']).toISOString()),
        'startTime': value['startTime'] == null ? undefined : ((value['startTime'] as any).toISOString()),
        'endTime': value['endTime'] == null ? undefined : ((value['endTime'] as any).toISOString()),
        'workMinutes': value['workMinutes'],
        'isActive': value['isActive'],
        'requests': value['requests'] == null ? undefined : ((value['requests'] as Array<any>).map(RequestCombinedMinimalDtoToJSON)),
    };
}

