import{j as c}from"./index--uR3bosk.js";import{D as p}from"./DatePicker-C7I8Jg0m.js";import{s as g}from"./TimePicker.module-D3qUlonp.js";import{l as u,s as l}from"./date.utils-CRd9Tq6_.js";import{i as P}from"./validate.utils-ciPUpZAo.js";import{a as f}from"./timesheet.util-DfkHrtme.js";const{RangePicker:T}=p,A=e=>{const{popupClassName:s,...a}=e;return c.jsx(T,{popupClassName:`${g.customPopupTimePicker} ${s??""}`,picker:"time",format:"HH:mm:ss",...a})},y=e=>{if(!e)return{disabledHours:()=>[],disabledMinutes:()=>[],disabledSeconds:()=>[]};const s=n=>{const[r,t]=n.split(":").map(Number);return{hours:r,minutes:t}},a=s(e.startTimeMorning),i=s(e.endTimeMorning),m=s(e.startTimeAfternoon),o=f(u(e.endTimeAfternoon),{minutes:e.allowedLateMinutes});return{disabledHours:()=>Array.from({length:24},(r,t)=>t).filter(r=>(r<a.hours||r>i.hours)&&(r<m.hours||r>o.getHours())),disabledMinutes:n=>{const r=Array.from({length:60},(t,d)=>d);return n===a.hours?r.filter(t=>t<a.minutes):n===i.hours?r.filter(t=>t>i.minutes):n===m.hours?r.filter(t=>t<m.minutes):n===o.getHours()?r.filter(t=>t>o.getMinutes()):[]},disabledSeconds:()=>[]}},D=(e,s=!1)=>(a,i)=>{if(!e)return Promise.reject(new Error("No working time information available."));if(P(i))return s?Promise.reject(new Error("Please input your working time!")):Promise.resolve();const m=f(u(e.endTimeAfternoon),{minutes:e.allowedLateMinutes}),o=l(i[0]),n=l(i[1]),r=o>=u(e.startTimeMorning)&&m>=o,t=n>=u(e.startTimeMorning)&&m>=n;return r&&t&&n>o?Promise.resolve():Promise.reject(new Error("The time period is not valid."))};export{A as R,y as a,D as r};
