import{r as m,i as o}from"./index--uR3bosk.js";import{u,g as i,b as f,d}from"./error.utils-BlwQgnKf.js";const R=()=>{const[c,r]=m.useState(!1);return{loading:c,createUser:async(e,s)=>{r(!0);try{await u.userCreate({userCreateUpdateRequest:e}),s&&s(),o().success({message:"Successfully completed"})}catch(a){o().error({message:await i(a)})}finally{r(!1)}},updateUser:async(e,s,a)=>{r(!0);try{let t=await u.userUpdate({id:e,userCreateUpdateRequest:s});a==null||a(t),o().success({message:"Successfully completed"})}catch(t){o().error({message:await i(t)})}finally{r(!1)}},formDefault:e=>{var s,a,t,l;return e?{...e,fullName:e.fullName??"",workTimeId:(s=e.workTime)==null?void 0:s.id,teamId:(a=e.team)==null?void 0:a.id,supervisorId:(t=e.supervisor)==null?void 0:t.id,managerTeamIds:(l=e.managerTeams)==null?void 0:l.map(n=>n.id),roleNames:e.roles??[]}:d({})},syncUsers:async e=>{r(!0);try{let s=await f.bioStarSyncUsers();e==null||e(s)}catch(s){o().error({message:await i(s)})}finally{r(!1)}},deleteRecord:async e=>{r(!0);try{return await u.userDelete({id:e})}catch(s){o().error({message:await i(s)})}finally{r(!1)}}}};export{R as u};
